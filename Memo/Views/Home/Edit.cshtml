@model Memo.Models.Header

@{
    ViewBag.Title = "Edit";
}

<script src="http://localhost:8273/Scripts/crud.js"></script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-lg-5">
        <div class="form-horizontal">
            <h4>Header</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID, new {@id = "id", @hidden = "hidden"})

            <div class="form-group">
                @Html.LabelFor(model => model.RNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Type, new List<SelectListItem> { new SelectListItem { Text = "Credit", Value = "Credit" }, new SelectListItem { Text = "Debit", Value = "Debit" } }, "-Select-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Store, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Store, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Store, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}
@*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*@
<div class="col-lg-7">
    <div class="form-horizontal">
        <h4 hidden="hidden">Hatdog</h4>



        <div class="form-group">
            @*@Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { @id = "editor2", @class = "form-control", @rows = "200" })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                <script>
                    CKEDITOR.replace('editor2');
                </script>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">          
                @Html.EditorFor(model => model.Amount, new { @id = "Amount", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pesos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pesos, new { @id = "Pesos", htmlAttributes = new { @class = "form-control", @disabled = "disabled" }})
                @Html.ValidationMessageFor(model => model.Pesos, "", new { @class = "text-danger" })
                <script>

                </script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


</div>






<div class="form-group">
    <div class="col-md-offset-4 col-md-10">
        <input type="button" value="Save" onclick="Edit(); @("window.location.href='" + @Url.Action("Index", "Home") + "'");"" class="btn btn-default" />
    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
